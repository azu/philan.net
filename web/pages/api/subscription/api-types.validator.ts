// @ts-nocheck
// eslint-disable
// This file is generated by create-validator-ts
import Ajv from 'ajv';
import * as apiTypes from './api-types';

const SCHEMA = {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "AddSubscritionRequestBody": {
            "type": "object",
            "properties": {
                "startDate": {
                    "type": "string"
                },
                "cron": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                }
            },
            "required": [
                "startDate",
                "cron",
                "to",
                "amount",
                "currency",
                "url",
                "memo"
            ],
            "additionalProperties": false
        },
        "AddSubscritionResponseody": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            },
            "required": [
                "ok"
            ],
            "additionalProperties": false
        },
        "AppsScriptCreateRequestBody": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                }
            },
            "additionalProperties": false
        },
        "SubScriptionGetRequestQuery": {
            "type": "object",
            "additionalProperties": false
        },
        "SubScriptionGetResponseBody": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubscriptionItem"
                    }
                }
            },
            "required": [
                "items"
            ],
            "additionalProperties": false
        },
        "SubscriptionItem": {
            "type": "object",
            "properties": {
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "cron": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "number": {
                            "type": "number"
                        },
                        "value": {
                            "type": "string"
                        },
                        "raw": {
                            "type": "number"
                        },
                        "inputCurrency": {
                            "type": "string"
                        },
                        "outputCurrency": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "number",
                        "value",
                        "raw",
                        "inputCurrency",
                        "outputCurrency"
                    ],
                    "additionalProperties": false
                },
                "url": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                }
            },
            "required": [
                "startDate",
                "cron",
                "to",
                "amount",
                "url",
                "memo"
            ],
            "additionalProperties": false
        },
        "SetupStatusResponseBody": {
            "type": "object",
            "properties": {
                "hasSubscriptionSheet": {
                    "type": "boolean"
                },
                "hasAppsScript": {
                    "type": "boolean"
                }
            },
            "required": [
                "hasSubscriptionSheet",
                "hasAppsScript"
            ],
            "additionalProperties": false
        }
    }
};
const ajv = new Ajv({ removeAdditional: true }).addSchema(SCHEMA, "SCHEMA");
export function validateAddSubscritionRequestBody(payload: unknown): apiTypes.AddSubscritionRequestBody {
  if (!isAddSubscritionRequestBody(payload)) {
    const error = new Error('invalid payload: AddSubscritionRequestBody');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isAddSubscritionRequestBody(payload: unknown): payload is apiTypes.AddSubscritionRequestBody {
  /** Schema is defined in {@link SCHEMA.definitions.AddSubscritionRequestBody } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/AddSubscritionRequestBody" });
  return ajvValidate(payload);
}

export function validateAddSubscritionResponseody(payload: unknown): apiTypes.AddSubscritionResponseody {
  if (!isAddSubscritionResponseody(payload)) {
    const error = new Error('invalid payload: AddSubscritionResponseody');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isAddSubscritionResponseody(payload: unknown): payload is apiTypes.AddSubscritionResponseody {
  /** Schema is defined in {@link SCHEMA.definitions.AddSubscritionResponseody } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/AddSubscritionResponseody" });
  return ajvValidate(payload);
}

export function validateAppsScriptCreateRequestBody(payload: unknown): apiTypes.AppsScriptCreateRequestBody {
  if (!isAppsScriptCreateRequestBody(payload)) {
    const error = new Error('invalid payload: AppsScriptCreateRequestBody');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isAppsScriptCreateRequestBody(payload: unknown): payload is apiTypes.AppsScriptCreateRequestBody {
  /** Schema is defined in {@link SCHEMA.definitions.AppsScriptCreateRequestBody } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/AppsScriptCreateRequestBody" });
  return ajvValidate(payload);
}

export function validateSubScriptionGetRequestQuery(payload: unknown): apiTypes.SubScriptionGetRequestQuery {
  if (!isSubScriptionGetRequestQuery(payload)) {
    const error = new Error('invalid payload: SubScriptionGetRequestQuery');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isSubScriptionGetRequestQuery(payload: unknown): payload is apiTypes.SubScriptionGetRequestQuery {
  /** Schema is defined in {@link SCHEMA.definitions.SubScriptionGetRequestQuery } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/SubScriptionGetRequestQuery" });
  return ajvValidate(payload);
}

export function validateSubScriptionGetResponseBody(payload: unknown): apiTypes.SubScriptionGetResponseBody {
  if (!isSubScriptionGetResponseBody(payload)) {
    const error = new Error('invalid payload: SubScriptionGetResponseBody');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isSubScriptionGetResponseBody(payload: unknown): payload is apiTypes.SubScriptionGetResponseBody {
  /** Schema is defined in {@link SCHEMA.definitions.SubScriptionGetResponseBody } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/SubScriptionGetResponseBody" });
  return ajvValidate(payload);
}

export function validateSubscriptionItem(payload: unknown): apiTypes.SubscriptionItem {
  if (!isSubscriptionItem(payload)) {
    const error = new Error('invalid payload: SubscriptionItem');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isSubscriptionItem(payload: unknown): payload is apiTypes.SubscriptionItem {
  /** Schema is defined in {@link SCHEMA.definitions.SubscriptionItem } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/SubscriptionItem" });
  return ajvValidate(payload);
}

export function validateSetupStatusResponseBody(payload: unknown): apiTypes.SetupStatusResponseBody {
  if (!isSetupStatusResponseBody(payload)) {
    const error = new Error('invalid payload: SetupStatusResponseBody');
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isSetupStatusResponseBody(payload: unknown): payload is apiTypes.SetupStatusResponseBody {
  /** Schema is defined in {@link SCHEMA.definitions.SetupStatusResponseBody } **/
  const ajvValidate = ajv.compile({ "$ref": "SCHEMA#/definitions/SetupStatusResponseBody" });
  return ajvValidate(payload);
}
